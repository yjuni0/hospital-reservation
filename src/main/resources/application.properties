spring.application.name=reservation
server.address=0.0.0.0
server.port=8080
spring.jmx.enabled=true
spring.jmx.mbean-domain=com.project.reservation
##mysql
spring.datasource.url=jdbc:mysql://localhost:3306/reservation_db
spring.datasource.username=reservation
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Redis ?? ??
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.database=0
logging.level.org.springframework.data.redis=DEBUG
logging.level.redis.clients.jedis=DEBUG
logging.level.org.springframework.cache=DEBUG
spring.data.redis.timeout=3000
spring.cache.type=redis
#SQL
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.highlight_sql=true

#jpa
spring.jpa.open-in-view=true
spring.jpa.show-sql=true

# ???? ? ?? ??
project.folderPath = /home/ubuntu/uploads/files

# ???? ???? ?? ??
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=user
#spring.datasource.password=password
#spring.sql.init.platform=h2
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
#spring.sql.init.mode=always

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true
#?? ??
jwt.secret=${JWT_SECRET}


#JWT ?? ???? ??
jwt.tokenExpirationTime=18000
#JWT? ??? ?? ??? AUTHORIZATION?? ?? ?? ??
jwt.header=Authorization

#Authorization header? ??? Bearer
jwt.prefix=Bearer 

# Google Login
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

# Naver Login
#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

server.error.whitelabel.enabled=false